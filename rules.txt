JSON型規定

''で囲まれているデータは定型文であり、記述の通りに返す

api/order
    リクエスト時: POST
        [
            {
                NAME:       製品の名前:文字列型,
                PRICE:      値段:整数型,
                ITEM_QUANTITY:  製品の個数:整数型,
                ADD_EGG:    卵の追加の有無:ブール型,
                ADD_BEEF:   肉の追加の有無:ブール型
            }
            ...以下同じデータが続く場合もある
        ]
    レスポンス時
        成功時
            200番レスポンスを返す
        失敗時
            {
                RESULT: 'FAILED',
                MESSAGE: エラーメッセージ:整数型
            }

api/order-list
    リクエスト時: GET
        GETリクエストのため省略
    レスポンス時
        {
            [
                {
                    ORDER_NUMBER: 注文番号,
                    ORDER_CONTENTS:[
                        { PRODUCT_NAME: 商品名, ADD_EGG: ブール型, ADD_BEEF: ブール型, PRODUCT_QUANTITY: 整数型, ORDER_TIME: TIME型(Mysql準拠)}
                        //補足　ADD_EGG, ADD_BEEFは卵を追加されている場合のみTRUEを返す。デフォルトはFALSE
                    ]
                },
                {
                    ORDER_NUMBER: 注文番号,
                    ORDER_CONTENTS:[以下内容省略]
                }
            ]
        }

api/order リクエスト時にORDERSテーブルに対して保存するデータ形式
    ORDER_NUMBER, PRODUCT_NAME, PRODUCT_QUANTITY, ADD_EGG, ADD_BEEF, ORDER_TIME
    
    ORDER_NUMBER: 注文番号(整数型)
    PRODUCT_NAME: 商品名（文字列型）
    PRODUCT_QUANTITY: 注文個数(整数型)
    ADD_EGG: 卵の追加オプション(ブール型, 0と1で表現)
    ADD_BEEF: お肉の追加オプション(ブール型, 0と1で表現)
    ORDER_TIME: 注文時間(TIME型)
データベース構造規定

ORDERSテーブル
ORDER_NUMBER(注文番号) | PRODUCT_NAME(商品名) | ADD_BEEF(肉追加のオプション) | ADD_EGG(肉追加のオプション) | ORDER_TIME(注文時の時間) 
